[
  {
    "line": 1,
    "elements": [
      {
        "line": 2,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "skipped"
            },
            "line": 3,
            "name": "user in TalentTEK Homepage",
            "match": {
              "location": "stepDef.LoginSteps.userInTalentTEKHomepage()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2023-03-16T15:47:48.034Z",
        "before": [
          {
            "result": {
              "error_message": "java.lang.IllegalStateException: The path to the driver executable The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver. The latest version can be downloaded from https://chromedriver.storage.googleapis.com/index.html\r\n\tat org.openqa.selenium.internal.Require$StateChecker.nonNull(Require.java:280)\r\n\tat org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:135)\r\n\tat org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:38)\r\n\tat org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:231)\r\n\tat org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)\r\n\tat org.openqa.selenium.chrome.ChromeDriverService.createServiceWithConfig(ChromeDriverService.java:141)\r\n\tat org.openqa.selenium.chrome.ChromeDriver.\u003cinit\u003e(ChromeDriver.java:80)\r\n\tat base.Config.setupBrowser(Config.java:20)\r\n\tat stepDef.Hook.beforeEachTest(Hook.java:19)\r\n",
              "duration": 36000000,
              "status": "failed"
            },
            "match": {
              "location": "stepDef.Hook.beforeEachTest()"
            }
          }
        ],
        "line": 6,
        "name": "User should be able to login with valid email and password",
        "description": "",
        "id": "login-feature;user-should-be-able-to-login-with-valid-email-and-password",
        "after": [
          {
            "result": {
              "error_message": "java.lang.NullPointerException\r\n\tat stepDef.Hook.afterEachTest(Hook.java:45)\r\n",
              "duration": 2000000,
              "status": "failed"
            },
            "match": {
              "location": "stepDef.Hook.afterEachTest(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user enter valid email address",
            "match": {
              "location": "stepDef.LoginSteps.userEnterValidEmailAddress()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enter valid password",
            "match": {
              "location": "stepDef.LoginSteps.userEnterValidPassword()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user clicks on Log In button",
            "match": {
              "location": "stepDef.LoginSteps.userClicksOnLogInButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user should be able to successfully login",
            "match": {
              "location": "stepDef.LoginSteps.userShouldBeAbleToSuccessfullyLogin()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@sanity"
          }
        ]
      }
    ],
    "name": "Login Feature",
    "description": "",
    "id": "login-feature",
    "keyword": "Feature",
    "uri": "file:src/test/java/features/login.feature",
    "tags": []
  }
]